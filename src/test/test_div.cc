#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <iostream>
#include <gtest/gtest.h>
#include <mympz/mympz.h>

using namespace mympz;

TEST(Mympz, UnPass) {
  bignum_t x,y;
  division_result_t z;
  std::string d_str, r_str;

#if defined(DISABLE_OPTIMIZE)
  // 此用例没有通过
  x = create("0xFFEEDDCCAABBCCDD5566778811223344");
  y = create("0x1122334455667788");
  z = div(x, y);
  d_str = print_string(z.first, true, true);
  r_str = print_string(z.second, true, true);
  EXPECT_STREQ(d_str.c_str(), "eefffffff0300007d");
  EXPECT_STREQ(r_str.c_str(), "19b34bc619d5dc");
#endif

  x = create(
    "AADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223333"
    "44FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA123"
    "4DDCAADD11223344FFBCDEA1234DDCDDCCAABB1289232CCAABB1289232CCAABB"
    "4DDCAADD11223344FFBCDEA1234DDCDDCCAABB1289232CCAABB1289232CCAABB"
    "44FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA123"
    "FFAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD112233"
    // "FFAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD112233"
    // "FFAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD112233"
    // "FFDDCCBB12345784365482785490910375482749031560427490368427489FFF"
    // "19DD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD112233DD"
  ,true);
  std::cout << "x = " << print_string(x) << std::endl;

  y = create(
    "AADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223333"
    "44FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA123"
    "4DDCAADD11223344FFBCDEA1234DDCDDCCAABB1289232CCAABB1289232CCAABB"
  ,true);
  std::cout << "y = " << print_string(y) << std::endl;

  z = div(x, y);
  d_str = print_string(z.first);
  r_str = print_string(z.second);
  // std::cout << "d = " << d_str << std::endl;
  // std::cout << "d = " << d_str << " " << "r = " << r_str << std::endl;
  EXPECT_STREQ(d_str.c_str(), "279095111627852376407822673918065072905887935345660252615989519488029661278604994789701101367875859521849524793382568057369148405837577299984720398976429790087982805274893437406788716103454867635208144157749912668657006085226160261890761798940942036332051055842485374675006806528366124131456318208416849998066560903780997815790330516229053668258977883028732438674907733514093750266925470828789656455163908466284915413913431287537371252601771882232356380935280434910659890070596786849502104469346651204763835777484147406204015696064127320167");
  EXPECT_STREQ(r_str.c_str(), "939916518399087802482866878050798800080412582396305753424210291225695637087225116884095757628500831347416658761558447542562677407172384154311207454034218449019473448111350169017024345172348928850463352810196463389962326486954328736");
}

TEST(Mympz, Div) {
  bignum_t x,y;
  division_result_t z;
  std::string d_str, r_str;

  x = create("0x55667788AABBCCDDFFEEDDCC11223344");
  y = create("0xEEFFCCDDBBAA1122");
  z = div(x, y);
  d_str = print_string(z.first, true, true);
  r_str = print_string(z.second, true, true);
  EXPECT_STREQ(d_str.c_str(), "5b799d3f5881f172");
  EXPECT_STREQ(r_str.c_str(), "a37ccd6f13239020");

  x = create("56789");
  y = create("123");
  z = div(x, y);
  d_str = print_string(z.first);
  r_str = print_string(z.second);
  EXPECT_STREQ(d_str.c_str(), "461");
  EXPECT_STREQ(r_str.c_str(), "86");

  x = create("5678932145424313244313232143542432");
  y = create("12341235465432547623431431");
  z = div(x, y);
  d_str = print_string(z.first);
  r_str = print_string(z.second);
  EXPECT_STREQ(d_str.c_str(), "460159127");
  EXPECT_STREQ(r_str.c_str(), "7549433452529100110221695");

  x = create(
    "AADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223AAF"
    "44FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA123"
    "4DDCAADD11223344FFBCDEA1234DDCDDCCAABB1289232CCAABB1289232CCAABB"
    "4DDCAADD11223344FFBCDEA1234DDCDDCCAABB1289232CCAABB1289232CCAABB"
    "44FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA123"
    "FFAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD112233"
    "FFAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD112233"
    "FFAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD112233"
  ,true);
  // std::cout << "x = " << print_string(x) << std::endl;
  y = create(
    "AADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223333"
    "44FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA123"
    "4DDCAADD11223344FFBCDEA1234DDCDDCCAABB1289232CCAABB1289232CCAABB"
    "4DDCAADD11223344FFBCDEA1234DDCDDCCAABB1289232CCAABB1289232CCAABB"
    "44FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA123"
    "FFAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD112233"
    "FFAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD112233"
    "FFAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD112233"
    "FFDDCCBB12345784365482785490910375482749031560427490368427489FFF"
    "19DD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD112233DD"
  ,true);
  // std::cout << "y = " << print_string(y) << std::endl;
  z = div(y, x);
  d_str = print_string(z.first);
  r_str = print_string(z.second);
  EXPECT_STREQ(d_str.c_str(), "13407807929942597099574024998205846127479365820592393377723561443721764029741143962624141838183490357554335959547134604119870891686790233339828254276256602");
  EXPECT_STREQ(r_str.c_str(), "21175685170448463646996560190595082856718904083028965863566610256317014862544035701382102883055223177540923991989036759128902518240610842297367761195819164670029291466913243438266560186281775403282937234818179930114533667349685864365124402546062495855264012312718565827275423656959267394759987548526661492308171746510134302056336661280062409908824935482968291135959676788812717106973328653246724939611287117341847309753596337140070095920182141572112632656711855675899680768856480893829913079541928423083306730812074004091389808178105949021705558621463693097067193200855000616963470929426491029267724381565516765238511");

  x = create(
    "AADD11223344FFBC"
  ,true);
  // std::cout << "x = " << print_string(x) << std::endl;

  y = create(
    "AADD11223344FFBC"
  ,true);

  z = div(y, x);
  d_str = print_string(z.first);
  EXPECT_STREQ(d_str.c_str(), "1");

  x = create(
    "AADD11223344FFBC"
  ,true);
  // std::cout << "x = " << print_string(x) << std::endl;

  // y = create(
  //   "AADD11223344FFBCDEA1234DDCAADD11"
  // ,true);
  y = create(
    "AADD11223344FFBCDEA1234DDCAADD11"
  ,true);

  z = div(y, x);
  d_str = print_string(z.first);
  r_str = print_string(z.second);
  // std::cout << "d = " << d_str << std::endl;
  // std::cout << "d = " << d_str << " " << "r = " << r_str << std::endl;
  EXPECT_STREQ(d_str.c_str(), "18446744073709551617");
  EXPECT_STREQ(r_str.c_str(), "3730126370104532309");

  x = create(
    "AADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223333"
    "44FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA123"
    "4DDCAADD11223344FFBCDEA1234DDCDDCCAABB1289232CCAABB1289232CCAABB"
    "4DDCAADD11223344FFBCDEA1234DDCDDCCAABB1289232CCAABB1289232CCAABB"
    "44FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA123"
    "FFAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD112233"
    // "FFAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD112233"
    // "FFAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD112233"
    // "FFDDCCBB12345784365482785490910375482749031560427490368427489FFF"
    // "19DD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD112233DD"
  ,true);
  std::cout << "x = " << print_string(x) << std::endl;

  y = create(
    "AADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223333"
    "44FFBCDEA1234DDCAADD11223344FFBCDEA1234DDCAADD11223344FFBCDEA123"
    "4DDCAADD11223344FFBCDEA1234DDCDDCCAABB1289232CCAABB1289232CCAABB"
  ,true);
  std::cout << "y = " << print_string(y) << std::endl;

  z = div(x, y);
  d_str = print_string(z.first);
  r_str = print_string(z.second);
  // std::cout << "d = " << d_str << std::endl;
  // std::cout << "d = " << d_str << " " << "r = " << r_str << std::endl;
  EXPECT_STREQ(d_str.c_str(), "279095111627852376407822673918065072905887935345660252615989519488029661278604994789701101367875859521849524793382568057369148405837577299984720398976429790087982805274893437406788716103454867635208144157749912668657006085226160261890761798940942036332051055842485374675006806528366124131456318208416849998066560903780997815790330516229053668258977883028732438674907733514093750266925470828789656455163908466284915413913431287537371252601771882232356380935280434910659890070596786849502104469346651204763835777484147406204015696064127320167");
  EXPECT_STREQ(r_str.c_str(), "939916518399087802482866878050798800080412582396305753424210291225695637087225116884095757628500831347416658761558447542562677407172384154311207454034218449019473448111350169017024345172348928850463352810196463389962326486954328736");
}

TEST(Mympz, DivUnit) {
  bignum_t x,y;
  std::string y_str;

  x = create("2133545241523432654321426543543143215425434312425312454254243154241425314315424314432");
  bignum_t z;
  division_result_t res;
  z = create("AAFFBBCCDD223344", true);
  res = div(x, z);
  std::string q_str = print_string(res.first);
  std::string r_str = print_string(res.second);
  EXPECT_STREQ(q_str.c_str(), "173152446377589581230323824595894323210568774914033697511446676810");
  EXPECT_STREQ(r_str.c_str(), "10063173294514900632");

#ifdef ARCH_64BITS
  unit_t r = 0;
  zero(x);
  y = div(x, 0xAAFFBBCCDD223344, 0, &r);
  y_str = print_string(y);
  EXPECT_STREQ(y_str.c_str(), "0");
  EXPECT_EQ(r, 0);

  x = create("2133545241523432654321426543543143215425434312425312454254243154241425314315424314432");
  y = div(x, 0xAAFFBBCCDD223344, 0, &r);
  y_str = print_string(y);
  EXPECT_STREQ(y_str.c_str(), "173152446377589581230323824595894323210568774914033697511446676810");
  unit_t t = 10063173294514900632UL;
  EXPECT_EQ(r, t);
#endif
}

int main(int argc, char* argv[]) {
  testing::InitGoogleTest(&argc, argv);
  return RUN_ALL_TESTS();
}